"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[4196],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return t?o.createElement(h,r(r({ref:n},u),{},{components:t})):o.createElement(h,r({ref:n},u))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,r=new Array(s);r[0]=m;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[d]="string"==typeof e?e:i,r[1]=a;for(var c=2;c<s;c++)r[c]=t[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9694:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=t(7462),i=(t(7294),t(3905));const s={title:"Install Unmanic - Windows 10 (WSL + Docker)",description:"Unmanic Windows 10 Install Guide",id:"unmanic_windows_install"},r=void 0,a={unversionedId:"guides/unmanic_windows_install",id:"guides/unmanic_windows_install",title:"Install Unmanic - Windows 10 (WSL + Docker)",description:"Unmanic Windows 10 Install Guide",source:"@site/docs/guides/unmanic_windows_install.md",sourceDirName:"guides",slug:"/guides/unmanic_windows_install",permalink:"/docs/guides/unmanic_windows_install",draft:!1,tags:[],version:"current",frontMatter:{title:"Install Unmanic - Windows 10 (WSL + Docker)",description:"Unmanic Windows 10 Install Guide",id:"unmanic_windows_install"},sidebar:"docs",previous:{title:"Docker-Compose SMB/CIFS mounts",permalink:"/docs/advanced/docker_compose_cifs_mounts"},next:{title:"Install Unmanic - MacOS",permalink:"/docs/guides/unmanic_macos_install"}},l={},c=[{value:"Requirements",id:"requirements",level:2},{value:"1) Checking requirements",id:"1-checking-requirements",level:3},{value:"Instructions",id:"instructions",level:2},{value:"1) Installing WSL 2(Windows subsystem for Linux 2)",id:"1-installing-wsl-2windows-subsystem-for-linux-2",level:3},{value:"2) Mount your media library in WSL 2 Ubuntu",id:"2-mount-your-media-library-in-wsl-2-ubuntu",level:3},{value:"3) Docker for Windows",id:"3-docker-for-windows",level:3},{value:"4) Troubleshooting common issues",id:"4-troubleshooting-common-issues",level:3},{value:"5) NVIDIA hardware acceleration for Unmanic on Windows",id:"5-nvidia-hardware-acceleration-for-unmanic-on-windows",level:3}],u={toc:c};function d(e){let{components:n,...s}=e;return(0,i.kt)("wrapper",(0,o.Z)({},u,s,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/Difficulty-moderate-orange?style=flat",alt:"Difficulty"}),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/Setup%20Time-30%20minutes-orange?style=flat",alt:"Setup Time"}),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/austinsr1"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Original%20Author-austinsr1-lightgrey?style=flat?style=plastic&logo=github",alt:"Original Author"}))),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The process for setting this up on Windows11 should be similar.")),(0,i.kt)("p",null,"This requires Windows 10, Version 1903, Build 18362 or higher."),(0,i.kt)("h3",{id:"1-checking-requirements"},"1) Checking requirements"),(0,i.kt)("p",null,"To check this, press windows key R."),(0,i.kt)("p",null,"In the run dialog, type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"winver\n")),(0,i.kt)("img",{className:"screenshot",src:t(2739).Z}),(0,i.kt)("img",{className:"screenshot",src:t(7280).Z}),(0,i.kt)("p",null,"If you are not running Version 1903, Build 18362 or higher, you can\ndownload the Windows Update Assistant from Microsoft.\n",(0,i.kt)("a",{parentName:"p",href:"https://www.microsoft.com/en-us/software-download/windows10"},"https://www.microsoft.com/en-us/software-download/windows10")," . This\nwill update your system to the newest Windows 10 version."),(0,i.kt)("h2",{id:"instructions"},"Instructions"),(0,i.kt)("h3",{id:"1-installing-wsl-2windows-subsystem-for-linux-2"},"1) Installing WSL 2(Windows subsystem for Linux 2)"),(0,i.kt)("p",null,"As an administrator account, open a cmd window by pressing windows key R"),(0,i.kt)("img",{className:"screenshot",src:t(9237).Z}),(0,i.kt)("p",null,"In the run dialog, enter the command, cmd and click ok. Enter the\nfollowing command in the cmd window:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"wsl --install -d Ubuntu\n")),(0,i.kt)("p",null,"Once the command has finished, reboot your computer. "),(0,i.kt)("p",null,"After rebooting, the Ubuntu install will continue. This will take a few\nminutes. Do not close the Ubuntu dialog box while it is installing."),(0,i.kt)("img",{className:"screenshot",src:t(6254).Z}),(0,i.kt)("p",null,"You will eventually see a prompt to Enter new UNIX username: prompt."),(0,i.kt)("img",{className:"screenshot",src:t(3930).Z}),(0,i.kt)("p",null,'Select a username and press enter. It will now prompt for a "New\npassword". Enter a password and press enter. '),(0,i.kt)("p",null,'It will then ask you to "Retype new password". Verify your password and press enter.\nYou will now be at a bash prompt. If at any point, you close the Ubuntu bash window,\nyou can re-open it by pressing windows key R and typing: bash then press ok.'),(0,i.kt)("img",{className:"screenshot",src:t(4459).Z}),(0,i.kt)("h3",{id:"2-mount-your-media-library-in-wsl-2-ubuntu"},"2) Mount your media library in WSL 2 Ubuntu"),(0,i.kt)("p",null,"First, we will make a mount point for our library."),(0,i.kt)("p",null,"To make the changes we need to directories and files, we will use the\nsudo command. This will prompt for the password that you set earlier."),(0,i.kt)("p",null,"As an example, we will use the Windows drive letter Y for the location\nof our library."),(0,i.kt)("p",null,"In your Ubuntu bash window, type: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo mkdir /library\n")),(0,i.kt)("p",null,"This will create a local mount point where Unmanic will be able to see your media."),(0,i.kt)("p",null,"Next, we will want to make sure this drive will be mounted after\nreboots. For this command, we will need to run as root."),(0,i.kt)("p",null,"From the Ubuntu bash window, type: ",(0,i.kt)("inlineCode",{parentName:"p"},"sudo su -")," and press enter. Enter your\npassword when prompted."),(0,i.kt)("p",null,"Next, we will add the drive entry to the fstab file."),(0,i.kt)("p",null,"With the following command, we will want to leave the quotes in place.\nReplace Y with the drive letter of your mounted library."),(0,i.kt)("p",null,"From your Ubuntu bash window, type: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'echo "Y: /library drvfs defaults 0 0" >> /etc/fstab\n')),(0,i.kt)("p",null,"Next, we will need to mount the drive. From the Ubuntu bash window, type: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"mount -a\n")),(0,i.kt)("p",null,"To verify the drive is now mounted, type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"df -h\n")),(0,i.kt)("p",null,"The drive will be shown somewhere in the listed entries."),(0,i.kt)("img",{className:"screenshot",src:t(1015).Z}),(0,i.kt)("h3",{id:"3-docker-for-windows"},"3) Docker for Windows"),(0,i.kt)("p",null,"Next we will install Docker for Windows."),(0,i.kt)("p",null,"Docker for Windows can be found at\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.docker.com/desktop/windows/install/"},"https://docs.docker.com/desktop/windows/install/")),(0,i.kt)("p",null,"Once the Docker Desktop Installer has been downloaded, run the\ninstaller."),(0,i.kt)("p",null,'When the installer opens, make sure the "Install required Windows\ncomponents for WSL 2" is checked. Click Ok to start the installation.'),(0,i.kt)("p",null,"When the installation is complete, it will prompt you to log out of\nwindows. Press the Close and log out button in the Docker installer."),(0,i.kt)("p",null,"After logging back in, Docker will have you accept its terms of use.\nClick the I accept the terms box and hit Accept."),(0,i.kt)("img",{className:"screenshot",src:t(6421).Z}),(0,i.kt)("p",null,"Once the Docker starting message closes, click the Skip tutorial link."),(0,i.kt)("p",null,"Next we will enable WSL2 support in docker. Click the gear icon on the\ntop right of the Docker window to bring up settings."),(0,i.kt)("img",{className:"screenshot",src:t(7154).Z}),(0,i.kt)("p",null,"Click Resources from the left menu and then WSL INTEGRATION"),(0,i.kt)("p",null,"Click the Enable integration with my default WSL distro."),(0,i.kt)("p",null,"Under the Enable integration with additional distros: , enable Ubuntu."),(0,i.kt)("p",null,"Click Apply & Restart."),(0,i.kt)("p",null,"Next we will install the Unmanic docker container."),(0,i.kt)("p",null,"Open the Ubuntu bash window and type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo docker pull josh5/unmanic\n")),(0,i.kt)("p",null,"Finally, we will go to the Unmanic documentation page to get the shell\nscript that will pass all the required flags to Unmanic.\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.unmanic.app/docs/installation/docker"},"https://docs.unmanic.app/docs/installation/docker")),(0,i.kt)("p",null,"In the Ubuntu bash window, type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo nano -w /usr/local/bin/start-unmanic.sh\n")),(0,i.kt)("p",null,"This will open the text editor nano."),(0,i.kt)("img",{className:"screenshot",src:t(6136).Z}),(0,i.kt)("p",null,"Once the nano window is open, copy the block of shellscript from the\nunmanic documentation link above. Switch back to your Ubuntu bash window\nwith nano open and right click anywhere on the screen. This will paste\nin the shellscript copied from the documentation."),(0,i.kt)("p",null,'Next, we will save and exit from nano. Press Ctrl x . You will see a\nmessage "Save modified buffer?" at the bottom left of the window. Type Y\nand press enter to save and exit.'),(0,i.kt)("img",{className:"screenshot",src:t(9779).Z}),(0,i.kt)("p",null,"Next, we will set the shell script to be executable. In the Ubuntu bash\nwindow, type: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo chmod 755 /usr/local/bin/start-unmanic.sh\n")),(0,i.kt)("p",null,"Finally, in the Ubuntu bash window, type: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo start-unmanic.sh\n")),(0,i.kt)("p",null,"If you are running the Windows firewall, you may see a security dialog.\nClick the Allow access button."),(0,i.kt)("img",{className:"screenshot",src:t(814).Z}),(0,i.kt)("p",null,"Unmanic is now running in Docker. To access Unmanic, open a web browser\nwindow to ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:8888"},"http://localhost:8888")),(0,i.kt)("h3",{id:"4-troubleshooting-common-issues"},"4) Troubleshooting common issues"),(0,i.kt)("p",null,"Problems can arise if the network connection to the computer is\ninterrupted. If Unmanic can no longer see your library, first check that\nthe network drive is still connected to the file server."),(0,i.kt)("p",null,"If the network drive is connected, and Unmanic still cannot see the\nlibrary, quit Docker by right clicking the Docker icon in the system\ntray and click Quit Docker Desktop. Docker must be quit completely, the\nRestart option will not resolve the issue."),(0,i.kt)("img",{className:"screenshot",src:t(7329).Z}),(0,i.kt)("p",null,"Restart Docker Desktop and restart Unmanic from the Ubuntu bash window."),(0,i.kt)("h3",{id:"5-nvidia-hardware-acceleration-for-unmanic-on-windows"},"5) NVIDIA hardware acceleration for Unmanic on Windows"),(0,i.kt)("p",null,"With WSL2, and a recent NVIDIA GPU and driver you can access hardware acceleration on Windows. Pascal and later GPUs are supported with a minimum driver or R495."),(0,i.kt)("p",null,"Install NVIDIA GeForce Game Ready or NVIDIA RTX Quadro Windows display driver on your system with a compatible GeForce or NVIDIA RTX/Quadro card from ",(0,i.kt)("a",{parentName:"p",href:"https://www.nvidia.com/Download/index.aspx"},"https://www.nvidia.com/Download/index.aspx"),". This is the only driver you need to install. Do not install any Linux display driver in WSL."),(0,i.kt)("p",null,"Confirm that your NVIDIA GPU is accessible in WSL by running:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},' docker run --rm --gpus all --entrypoint="" josh5/unmanic nvidia-smi')),(0,i.kt)("p",null,"Update the Docker Engine settings to enable the NVIDIA container runtime:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "builder": {\n    "gc": {\n      "defaultKeepStorage": "20GB",\n      "enabled": true\n    }\n  },\n  "experimental": false,\n  "runtimes": {\n    "nvidia": {\n      "path": "/usr/bin/nvidia-container-runtime",\n      "runtimeArgs": []\n    }\n  }\n}\n')),(0,i.kt)("p",null,"Update your start-unmanic.sh script to add the NVIDIA runtime and GPUs"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# NVIDIA_VISIBLE_DEVICES - The GPUs that will be accessible to the container\nNVIDIA_VISIBLE_DEVICES=all\n\ndocker run -ti --rm \\\n    -e PUID=${PUID} \\\n    -e PGID=${PGID} \\\n    -e NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES} \\\n    --runtime=nvidia \\\n    -p 8888:8888 \\\n    -v ${CONFIG_DIR}:/config \\\n    -v ${LIBRARY_DIR}:/library \\\n    -v ${CACHE_DIR}:/tmp/unmanic \\\n    josh5/unmanic:latest\n")))}d.isMDXComponent=!0},9237:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/cmd-05779fd6c6867ce59c2c616910374c16.png"},1015:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/df-4776a48144c7138bdcae1ef2947161bf.png"},6421:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/docker_starting-075a998ea4abe8589831c588b732cc2a.png"},7154:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/docker_wsl_setup-a8d3baddbce578fdb0602d055c3e28eb.png"},6136:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/new_nano-233e6a8bbf8b7ac7d2408331e9c8641e.png"},6254:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/post_reboot_ubuntu_install-b3115a17cefe47ff33b2aa081684e4fa.png"},7329:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/quit_docker-2739890e0c9464ff766819c457208f8f.png"},4459:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/run_bash-78bd0a38645b492b426c89b6c0d81081.png"},9779:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/save_nano-bbc5c11025d7e21b77e736c689a490b7.png"},3930:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/username-f75075ff71871284259d3a637c301bc0.png"},814:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/windows_security_alert-387453140c788c038406b8f8bd7f6af2.png"},7280:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/winver-3bf61b87bbda8fd542264424bfb633d4.png"},2739:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/winver_run-0ef2f7c960ce738968151c60693162b0.png"}}]);