"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[6905],{995:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"development/writing_plugins/system_info","title":"Accessing System Info","description":"Unmanic Writing Plugins > Accessing System Info","source":"@site/docs/development/writing_plugins/accessing_system_info.mdx","sourceDirName":"development/writing_plugins","slug":"/development/writing_plugins/system_info","permalink":"/docs/development/writing_plugins/system_info","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Accessing System Info","description":"Unmanic Writing Plugins > Accessing System Info","id":"system_info"},"sidebar":"docs","previous":{"title":"Accessing Plugin Settings","permalink":"/docs/development/writing_plugins/plugin_settings"},"next":{"title":"Plugin Runners","permalink":"/docs/development/writing_plugins/plugin_runner_types"}}');var i=s(4848),o=s(8453);const r={title:"Accessing System Info",description:"Unmanic Writing Plugins > Accessing System Info",id:"system_info"},c=void 0,a={},l=[{value:"Example:",id:"example",level:5}];function p(n){const e={a:"a",code:"code",h5:"h5",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...n.components},{Details:s}=e;return s||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:["A Plugin has limited access to the Unmanic process' data. However, there is no limit\non what a plugin may carryout when it's ",(0,i.jsx)(e.a,{href:"/docs/development/writing_plugins/introduction#runners",children:(0,i.jsx)(e.strong,{children:"runner"})}),"\nprocesses are called."]}),"\n",(0,i.jsxs)(e.p,{children:["To aid a Plugin in carrying out system specific tasks, a ",(0,i.jsx)(e.strong,{children:"System"})," class has been provided\nto feed data to the ",(0,i.jsx)(e.a,{href:"/docs/development/writing_plugins/introduction#plugin-module",children:(0,i.jsx)(e.strong,{children:"Plugin module"})})," at the\ndiscretion of the Plugin's developer."]}),"\n",(0,i.jsx)(e.h5,{id:"example",children:"Example:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"    from unmanic.libs.system import System\n\n    system = System()\n    system_info = system.info()\n"})}),"\n",(0,i.jsx)(e.p,{children:"In this above example, the system_info variable will be filled with a dictionary of a range\nof system information."}),"\n",(0,i.jsx)(e.p,{children:"This information my vary from system to system. See below for an example of what data may be\nreturned."}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"System Information Example"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\n    "devices": {\n        "cpu_info": {\n            "python_version": "3.8.10.final.0 (64 bit)",\n            "cpuinfo_version": [\n                7,\n                0,\n                0\n            ],\n            "cpuinfo_version_string": "7.0.0",\n            "arch": "X86_64",\n            "bits": 64,\n            "count": 8,\n            "arch_string_raw": "x86_64",\n            "vendor_id_raw": "GenuineIntel",\n            "brand_raw": "Intel(R) Core(TM) i7-6770HQ CPU @ 2.60GHz",\n            "hz_advertised_friendly": "2.6000 GHz",\n            "hz_actual_friendly": "2.8001 GHz",\n            "hz_advertised": [\n                2600000000,\n                0\n            ],\n            "hz_actual": [\n                2800121000,\n                0\n            ],\n            "stepping": 3,\n            "model": 94,\n            "family": 6,\n            "flags": [\n                "3dnowprefetch",\n                "abm",\n                "acpi",\n                "adx",\n                "aes",\n                "aperfmperf",\n                "apic",\n                "arat",\n                "arch_perfmon",\n                "art",\n                "avx",\n                "avx2",\n                "bmi1",\n                "bmi2",\n                "bts",\n                "clflush",\n                "clflushopt",\n                "cmov",\n                "constant_tsc",\n                "cpuid",\n                "cpuid_fault",\n                "cx16",\n                "cx8",\n                "de",\n                "ds_cpl",\n                "dtes64",\n                "dtherm",\n                "dts",\n                "epb",\n                "ept",\n                "ept_ad",\n                "erms",\n                "est",\n                "f16c",\n                "flexpriority",\n                "flush_l1d",\n                "fma",\n                "fpu",\n                "fsgsbase",\n                "fxsr",\n                "hle",\n                "ht",\n                "hwp",\n                "hwp_act_window",\n                "hwp_epp",\n                "hwp_notify",\n                "ibpb",\n                "ibrs",\n                "ida",\n                "intel_pt",\n                "invpcid",\n                "invpcid_single",\n                "lahf_lm",\n                "lm",\n                "mca",\n                "mce",\n                "md_clear",\n                "mmx",\n                "monitor",\n                "movbe",\n                "mpx",\n                "msr",\n                "mtrr",\n                "nonstop_tsc",\n                "nopl",\n                "nx",\n                "osxsave",\n                "pae",\n                "pat",\n                "pbe",\n                "pcid",\n                "pclmulqdq",\n                "pdcm",\n                "pdpe1gb",\n                "pebs",\n                "pge",\n                "pln",\n                "pni",\n                "popcnt",\n                "pse",\n                "pse36",\n                "pti",\n                "pts",\n                "rdrand",\n                "rdrnd",\n                "rdseed",\n                "rdtscp",\n                "rep_good",\n                "rtm",\n                "sdbg",\n                "sep",\n                "sgx",\n                "smap",\n                "smep",\n                "ss",\n                "ssbd",\n                "sse",\n                "sse2",\n                "sse4_1",\n                "sse4_2",\n                "ssse3",\n                "stibp",\n                "syscall",\n                "tm",\n                "tm2",\n                "tpr_shadow",\n                "tsc",\n                "tsc_adjust",\n                "tsc_deadline_timer",\n                "tscdeadline",\n                "vme",\n                "vmx",\n                "vnmi",\n                "vpid",\n                "x2apic",\n                "xgetbv1",\n                "xsave",\n                "xsavec",\n                "xsaveopt",\n                "xsaves",\n                "xtopology",\n                "xtpr"\n            ],\n            "l3_cache_size": 6291456,\n            "l2_cache_size": "1 MiB",\n            "l1_data_cache_size": "128 KiB",\n            "l1_instruction_cache_size": "128 KiB",\n            "l2_cache_line_size": 256,\n            "l2_cache_associativity": 6\n        },\n        "gpu_info": []\n    },\n    "platform": [\n        "Linux",\n        "nightcrawler",\n        "5.8.0-44-generic",\n        "#50~20.04.1-Ubuntu SMP Wed Feb 10 21:07:30 UTC 2021",\n        "x86_64",\n        "x86_64"\n    ],\n    "python": "3.8.5.final.0"\n}\n'})})]})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>c});var t=s(6540);const i={},o=t.createContext(i);function r(n){const e=t.useContext(o);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);