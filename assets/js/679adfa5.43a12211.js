"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[1179],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,k=u["".concat(s,".").concat(d)]||u[d]||c[d]||r;return n?i.createElement(k,l(l({ref:t},m),{},{components:n})):i.createElement(k,l({ref:t},m))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3384:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var i=n(7462),a=(n(7294),n(3905));const r={title:"Linking Unmanic Installations",description:"Linking Unmanic Installations",id:"unmanic_link_installations"},l=void 0,o={unversionedId:"guides/unmanic_link_installations",id:"guides/unmanic_link_installations",title:"Linking Unmanic Installations",description:"Linking Unmanic Installations",source:"@site/docs/guides/unmanic_link_installations.md",sourceDirName:"guides",slug:"/guides/unmanic_link_installations",permalink:"/docs/guides/unmanic_link_installations",draft:!1,tags:[],version:"current",frontMatter:{title:"Linking Unmanic Installations",description:"Linking Unmanic Installations",id:"unmanic_link_installations"},sidebar:"docs",previous:{title:"Install Unmanic - Kubernetes",permalink:"/docs/guides/unmanic_kubernetes_install"},next:{title:"NVIDIA Hardware Acceleration on Linux",permalink:"/docs/guides/nvidia_support_unmanic_on_linux"}},s={},p=[{value:"Instructions",id:"instructions",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Link Setup",id:"link-setup",level:3},{value:"Route Tasks with Tags",id:"route-tasks-with-tags",level:3}],m={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,i.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/Difficulty-moderate-orange?style=flat",alt:"Difficulty"}),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/Setup%20Time-10%20minutes-orange?style=flat",alt:"Setup Time"}),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fredrikbaberg"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Original%20Author-fredrikbaberg-lightgrey?style=flat?style=plastic&logo=github",alt:"Original Author"}))),(0,a.kt)("p",null,"Multiple installations of Unmanic can be linked. This allows tasks to be processed in a distributed fashion."),(0,a.kt)("h2",{id:"instructions"},"Instructions"),(0,a.kt)("h3",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"At least two installs of Unmanic:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"One install has access to the filesystem containg the media to be processed. For the purpose of this guide, we'll refer to this install as ",(0,a.kt)("inlineCode",{parentName:"li"},"main"),"."),(0,a.kt)("li",{parentName:"ul"},"The other install will be called ",(0,a.kt)("inlineCode",{parentName:"li"},"remote"),". This has to be reachable from ",(0,a.kt)("inlineCode",{parentName:"li"},"main")," but does not require access to the files as they will transfered to and from ",(0,a.kt)("inlineCode",{parentName:"li"},"main")," as needed.")))),(0,a.kt)("h3",{id:"link-setup"},"Link Setup"),(0,a.kt)("p",null,"On ",(0,a.kt)("inlineCode",{parentName:"p"},"main"),", setup a ",(0,a.kt)("a",{parentName:"p",href:"/docs/configuration/libraries/adding_libraries"},"library"),". For the purpose of this exercise, this library will be named ",(0,a.kt)("inlineCode",{parentName:"p"},"Guide"),"."),(0,a.kt)("p",null,"Linking relies on libraries sharing a common name. Therefore, create a new library on ",(0,a.kt)("inlineCode",{parentName:"p"},"remote")," with the same name; in this case ",(0,a.kt)("inlineCode",{parentName:"p"},"Guide"),". Either export the library from ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," then import it on ",(0,a.kt)("inlineCode",{parentName:"p"},"remote")," (see tip below) or set it up manually. The library on ",(0,a.kt)("inlineCode",{parentName:"p"},"remote"),' only needs plugins related to making changes, i.e. encoding. "Scanning" plugins, such as filter by size, are not needed.'),(0,a.kt)("p",null,":::Note\nIt is recommended to create a new library for this, instead of using the default library.\n:::"),(0,a.kt)("p",null,"On ",(0,a.kt)("inlineCode",{parentName:"p"},"main"),", use the plus sign to add a remote installation:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Enter the service address of ",(0,a.kt)("inlineCode",{parentName:"li"},"remote")," using either the IP or hostname",(0,a.kt)("inlineCode",{parentName:"li"},". For example, "),"192.168.1.3:8888`."),(0,a.kt)("li",{parentName:"ul"},"Accept ",(0,a.kt)("inlineCode",{parentName:"li"},"None")," for authenication."),(0,a.kt)("li",{parentName:"ul"},"Click ",(0,a.kt)("inlineCode",{parentName:"li"},"Add"),"."),(0,a.kt)("li",{parentName:"ul"},"Click the ",(0,a.kt)("inlineCode",{parentName:"li"},"Configure")," icon and enable ",(0,a.kt)("inlineCode",{parentName:"li"},"Send tasks to this installation when workers are available"),".")),(0,a.kt)("p",null,"Once setup, the once grey logo should now turn blue. This indicates the remote installation is connected. The final result should look like this (as of version 0.2.4):"),(0,a.kt)("img",{className:"screenshot",src:n(2240).Z}),(0,a.kt)("p",null,"Pending tasks on ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," should now be sent to ",(0,a.kt)("inlineCode",{parentName:"p"},"remote"),". This may take a few minutes, depending on network speed."),(0,a.kt)("p",null,":::Tip\nYou can export the library configuration from ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," using the export button, copy the code shown in the panel that opens."),(0,a.kt)("img",{className:"screenshot",src:n(9037).Z}),(0,a.kt)("p",null,"You can then use import on ",(0,a.kt)("inlineCode",{parentName:"p"},"remote")," to paste the code. "),(0,a.kt)("img",{className:"screenshot",src:n(2209).Z}),":::",(0,a.kt)("h3",{id:"route-tasks-with-tags"},"Route Tasks with Tags"),(0,a.kt)("p",null,"At this point, this documentation makes the following assumptions about the existing setup thus far:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"2 installations of Unmanic exist on the network; ",(0,a.kt)("inlineCode",{parentName:"li"},"main")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"remote"),"."),(0,a.kt)("li",{parentName:"ul"},"Both installations are connected via ",(0,a.kt)("inlineCode",{parentName:"li"},"Link"),"."),(0,a.kt)("li",{parentName:"ul"},"Each installation has 1 library setup.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The library on ",(0,a.kt)("inlineCode",{parentName:"li"},"main")," has either ",(0,a.kt)("inlineCode",{parentName:"li"},"File Monitor"),", and/or ",(0,a.kt)("inlineCode",{parentName:"li"},"Library scanner")," enabled (based upon the needs of the reader)."),(0,a.kt)("li",{parentName:"ul"},"The library on ",(0,a.kt)("inlineCode",{parentName:"li"},"remote")," has both ",(0,a.kt)("inlineCode",{parentName:"li"},"File Monitor")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Libary scanner")," disabled.")))),(0,a.kt)("p",null,"For the purposes of this exercise, our objective now is to ensure all work is sent exclusively to ",(0,a.kt)("inlineCode",{parentName:"p"},"remote"),". In order to create this pipeline, proceed as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add a tag to the library on ",(0,a.kt)("inlineCode",{parentName:"li"},"main"),". We'll use the string \"work\" with no quotes. Remember to hit the Enter key after typing the string or the tag won't persist."),(0,a.kt)("li",{parentName:"ul"},"Add the same tag to the library on ",(0,a.kt)("inlineCode",{parentName:"li"},"remote"),"."),(0,a.kt)("li",{parentName:"ul"},"Add the same tag to the worker on ",(0,a.kt)("inlineCode",{parentName:"li"},"remote"),"."),(0,a.kt)("li",{parentName:"ul"},"Ensure this tag is not present on ",(0,a.kt)("inlineCode",{parentName:"li"},"main's")," worker.")),(0,a.kt)("p",null,"With this setup in place, the work flow operates as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The library on ",(0,a.kt)("inlineCode",{parentName:"li"},"main")," will be used to initiate all pending task (based on scans or file monitoring)."),(0,a.kt)("li",{parentName:"ul"},"Each task will be sent to any linked worker with a matching tag."),(0,a.kt)("li",{parentName:"ul"},"Once the file associated with the task is tranferred to a valid worker, it will be processed according to the libary found to have a matching tag."),(0,a.kt)("li",{parentName:"ul"},"Once processing is complete, the file will be tranferred back to ",(0,a.kt)("inlineCode",{parentName:"li"},"main"),".")),(0,a.kt)("p",null,"In all cases where greater insight is needed (troubleshooting, etc), each Unmanic installation can have ",(0,a.kt)("inlineCode",{parentName:"p"},"EnableDebugging")," toggled in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Logs")," section of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Help & Support")," page."))}u.isMDXComponent=!0},2209:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/import_config-14b96ba794daac45fb156c146e05caed.png"},9037:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/export_config-9ec2e9ec2adbb0b39ac4e5c77f21dd7f.png"},2240:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/remote_connected-0a0c01e0b7f2c900b4eae79e6a8e9e3f.png"}}]);