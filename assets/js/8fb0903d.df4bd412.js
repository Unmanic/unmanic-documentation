"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[9397],{2100:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"development/writing_plugins/introduction","title":"Introduction to Writing Plugins","description":"Writing Plugins for Unmanic should be easy.","source":"@site/docs/development/writing_plugins/introduction.mdx","sourceDirName":"development/writing_plugins","slug":"/development/writing_plugins/introduction","permalink":"/docs/development/writing_plugins/introduction","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Introduction to Writing Plugins","id":"introduction"},"sidebar":"docs","previous":{"title":"Plugin Development Overview","permalink":"/docs/development/developing_plugins"},"next":{"title":"Creating a New Plugin","permalink":"/docs/development/writing_plugins/creating_a_new_plugin"}}');var l=i(4848),r=i(8453);const s={title:"Introduction to Writing Plugins",id:"introduction"},o=void 0,d={},c=[{value:"Directory Structure",id:"directory-structure",level:2},{value:"File: <code>changelog.md</code>",id:"file-changelogmd",level:3},{value:"File: <code>description.json</code> <em>(optional)</em>",id:"file-descriptionjson-optional",level:3},{value:"File: <code>info.json</code>",id:"file-infojson",level:3},{value:"Example:",id:"example",level:5},{value:"Plugin handler compatibility:",id:"plugin-handler-compatibility",level:5},{value:"Directory: <code>lib</code> <em>(optional)</em>",id:"directory-lib-optional",level:3},{value:"File: <code>package.json</code> <em>(optional)</em>",id:"file-packagejson-optional",level:3},{value:"File: <code>plugin.py</code>",id:"file-pluginpy",level:3},{value:"File: <code>requirements.txt</code> <em>(optional)</em>",id:"file-requirementstxt-optional",level:3},{value:"Directory: <code>static</code> <em>(optional)</em>",id:"directory-static-optional",level:3},{value:"Plugin Module",id:"plugin-module",level:2},{value:"Runners",id:"runners",level:4},{value:"Example:",id:"example-1",level:5}];function a(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"Writing Plugins for Unmanic should be easy."}),"\n",(0,l.jsx)(n.p,{children:"All that is required to get started is a basic knowledge of writing\nPython scripts."}),"\n",(0,l.jsx)(n.h2,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,l.jsx)(n.p,{children:"The basic directory structure of a Plugin should be:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"my_new_plugin\n\u251c\u2500\u2500 changelog.md\n\u251c\u2500\u2500 description.md\n\u251c\u2500\u2500 info.json\n\u251c\u2500\u2500 lib\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 plugin.py\n\u251c\u2500\u2500 requirements.txt\n\u2514\u2500\u2500 static\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"file-changelogmd",children:["File: ",(0,l.jsx)(n.code,{children:"changelog.md"})]}),"\n",(0,l.jsx)(n.p,{children:"This file should be used to record changes made to the Plugin."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"file-descriptionjson-optional",children:["File: ",(0,l.jsx)(n.code,{children:"description.json"})," ",(0,l.jsx)(n.em,{children:"(optional)"})]}),"\n",(0,l.jsxs)(n.p,{children:["This file can be used to extend the description provided within the ",(0,l.jsx)(n.em,{children:"info.json"})," file."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"file-infojson",children:["File: ",(0,l.jsx)(n.code,{children:"info.json"})]}),"\n",(0,l.jsx)(n.p,{children:"A JSON file containing the metadata of your Plugin.\nThis JSON file should contain the following data:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"author"})})," - Your name."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"compatibility"})})," - A list of Unmanic Plugin Handler versions that this Plugin is compatible with (see table below)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"description"})})," - A long description of your Plugin detailing what it does. To include line-breaks, insert a ",(0,l.jsx)(n.code,{children:"\\n"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"icon"})})," - A URI to an image. If no icon is provided, the default Plugin icon will be used in the WebUI."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"id"})})," - A string identifier for your Plugin. Should only contain lowercase ",(0,l.jsx)(n.code,{children:"a-z"})," or ",(0,l.jsx)(n.code,{children:"_"})," characters."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"name"})})," - A very short name for your Plugin."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"platform"})}),' - Platform compatibility of this plugin. Can be any combination of ["all", "linux", "windows", "mac"].']}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"priorities"})})," - A dictionary of the initial priority that this Plugin's runners within the Plugin flow."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"tags"})})," - A comma separated list able to be used as keywords when searching for Plugins."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"version"})})," - The version of your Plugin."]}),"\n"]}),"\n",(0,l.jsx)(n.h5,{id:"example",children:"Example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "author": "Josh.5",\n    "compatibility": [\n        1,\n        2\n    ],\n    "description": "Specify a language tag for Unmanic to try and put as 1st subtitle track.",\n    "icon": "https://raw.githubusercontent.com/Josh5/unmanic.plugin.reorder_subtitle_streams_by_language/master/icon.png",\n    "id": "reorder_subtitle_streams_by_language",\n    "name": "Re-order subtitle streams by language",\n    "platform": [\n        "all"\n    ],\n    "priorities": {\n        "on_library_management_file_test": 99,\n        "on_worker_process": 2\n    },\n    "tags": "subtitle,ffmpeg,library file test",\n    "version": "1.0.4"\n}\n'})}),"\n",(0,l.jsx)(n.h5,{id:"plugin-handler-compatibility",children:"Plugin handler compatibility:"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Plugin handler"}),(0,l.jsx)(n.th,{children:"Unmanic versions"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"v1"}),(0,l.jsx)(n.td,{children:"v0.1.0 - v0.1.4"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"v2"}),(0,l.jsx)(n.td,{children:"v0.2.0 - current"})]})]})]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"directory-lib-optional",children:["Directory: ",(0,l.jsx)(n.code,{children:"lib"})," ",(0,l.jsx)(n.em,{children:"(optional)"})]}),"\n",(0,l.jsx)(n.p,{children:"Location of any additional Python modules imported by this plugin.\nUse this directory if you are including files from another project on GitHub, etc."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"file-packagejson-optional",children:["File: ",(0,l.jsx)(n.code,{children:"package.json"})," ",(0,l.jsx)(n.em,{children:"(optional)"})]}),"\n",(0,l.jsx)(n.p,{children:"This file will be read during the plugin build in GitHub. Any nodeJS packages listed will be installed and packaged with the plugin."}),"\n",(0,l.jsxs)(n.p,{children:["Python modules will be installed to ",(0,l.jsx)(n.code,{children:"{plugin root}/node_modules"}),"."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"file-pluginpy",children:["File: ",(0,l.jsx)(n.code,{children:"plugin.py"})]}),"\n",(0,l.jsx)(n.p,{children:"The main Pugin Python module."}),"\n",(0,l.jsx)(n.p,{children:"This file will be imported and it's functions called by the main Unmanic process."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"file-requirementstxt-optional",children:["File: ",(0,l.jsx)(n.code,{children:"requirements.txt"})," ",(0,l.jsx)(n.em,{children:"(optional)"})]}),"\n",(0,l.jsx)(n.p,{children:"This file will be read during the plugin build in GitHub. Any Python modules listed will be installed and packaged with the plugin."}),"\n",(0,l.jsxs)(n.p,{children:["Python modules will be installed to ",(0,l.jsx)(n.code,{children:"{plugin root}/site-packages"}),"."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.h3,{id:"directory-static-optional",children:["Directory: ",(0,l.jsx)(n.code,{children:"static"})," ",(0,l.jsx)(n.em,{children:"(optional)"})]}),"\n",(0,l.jsx)(n.p,{children:"Location of any static assets to be served via the webserver."}),"\n",(0,l.jsxs)(n.p,{children:["Assets located in this directory will be available via the webserver at ",(0,l.jsx)(n.code,{children:"/unmanic/panel/{plugin ID}/static/(.*)"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"plugin-module",children:"Plugin Module"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"plugin.py"})," file is a stand-alone Python module. From this module you may import other\nmodules as you see fit. There is no limitation on what may be executed within the\n",(0,l.jsx)(n.a,{href:"#runners",children:(0,l.jsx)(n.strong,{children:"runner"})}),"\nof your Plugin."]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h4,{id:"runners",children:"Runners"}),"\n",(0,l.jsxs)(n.p,{children:["The Plugin module is made up of defined ",(0,l.jsx)(n.strong,{children:"runner"})," functions. A Plugin may include multiple\nrunner functions such that it is executed at multiple stages of the library optimisation process."]}),"\n",(0,l.jsxs)(n.p,{children:["A ",(0,l.jsx)(n.strong,{children:"data"})," parameter is provided to the runner functions. This data parameter is a dictionary\nobject of information pertaining to that stage of the library optimisation process.\nThis data object's schema that is provided to a plugin runner should still exist once the plugin runner function has completed execution.\nDuring the function, that data may be manipulated as you see fit.\nA plugin runner may fail if data is removed from that data dictionary."]}),"\n",(0,l.jsxs)(n.p,{children:["Plugins should be tested with the ",(0,l.jsx)(n.a,{href:"/docs/development/plugin_manager_cli",children:(0,l.jsx)(n.strong,{children:"Plugin Manager CLI"})})," before publishing changes to ensure\nthat the returned data matches the required schema for all included runner functions."]}),"\n",(0,l.jsx)(n.h5,{id:"example-1",children:"Example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def on_worker_process(data):\n    ...\n    return\n"})}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Runner Type"}),(0,l.jsx)(n.th,{children:"Documentation"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"on_library_management_file_test"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"/docs/development/writing_plugins/plugin_runner_types#library-management---file-test",children:"LINK"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"on_worker_process"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"/docs/development/writing_plugins/plugin_runner_types#worker---processing-file",children:"LINK"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"on_postprocessor_file_movement"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"/docs/development/writing_plugins/plugin_runner_types#post-processor---file-movements",children:"LINK"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"on_postprocessor_task_results"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"/docs/development/writing_plugins/plugin_runner_types#post-processor---marking-task-successfailure",children:"LINK"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"render_frontend_panel"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"/docs/development/writing_plugins/plugin_runner_types#frontend---data-panel",children:"LINK"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"render_plugin_api"}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"/docs/development/writing_plugins/plugin_runner_types#frontend---plugin-api",children:"LINK"})})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(6540);const l={},r=t.createContext(l);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);