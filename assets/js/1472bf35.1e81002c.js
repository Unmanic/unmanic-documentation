"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[8107],{1470:(e,n,t)=>{t.d(n,{A:()=>x});var i=t(6540),s=t(4164),r=t(3104),a=t(6347),o=t(205),l=t(7485),u=t(1682),c=t(679);function _(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,i.useMemo)(()=>{const e=n??function(e){return _(e).map(({props:{value:e,label:n,attributes:t,default:i}})=>({value:e,label:n,attributes:t,default:i}))}(t);return function(e){const n=(0,u.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const t=(0,a.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(s),(0,i.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})},[s,t])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=d(e),[a,l]=(0,i.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r})),[u,_]=p({queryString:t,groupId:s}),[m,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,s]=(0,c.Dv)(n);return[t,(0,i.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),g=(()=>{const e=u??m;return h({value:e,tabValues:r})?e:null})();(0,o.A)(()=>{g&&l(g)},[g]);return{selectedValue:a,selectValue:(0,i.useCallback)(e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),_(e),f(e)},[_,f,r]),tabValues:r}}var f=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function $({className:e,block:n,selectedValue:t,selectValue:i,tabValues:a}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),u=e=>{const n=e.currentTarget,s=o.indexOf(n),r=a[s].value;r!==t&&(l(n),i(r))},c=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:i})=>(0,b.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:c,onClick:u,...i,className:(0,s.A)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:t}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===t);return e?(0,i.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function y(e){const n=m(e);return(0,b.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,b.jsx)($,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function x(e){const n=(0,f.A)();return(0,b.jsx)(y,{...e,children:_(e.children)},String(n))}},2559:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/import_config-14b96ba794daac45fb156c146e05caed.png"},3896:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>_});const i=JSON.parse('{"id":"guides/script_subtitle_stripping","title":"Subtitle Stripping","description":"Strip subtitle streams out of video files","source":"@site/docs/guides/plugin_strip_subs.mdx","sourceDirName":"guides","slug":"/guides/script_subtitle_stripping","permalink":"/docs/guides/script_subtitle_stripping","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Subtitle Stripping","description":"Strip subtitle streams out of video files","id":"script_subtitle_stripping"},"sidebar":"docs","previous":{"title":"Running a FileBot Post-processor","permalink":"/docs/guides/filebot_post_processor"}}');var s=t(4848),r=t(8453),a=t(1470),o=t(9365);const l={title:"Subtitle Stripping",description:"Strip subtitle streams out of video files",id:"script_subtitle_stripping"},u=void 0,c={},_=[{value:"Instructions:",id:"instructions",level:2},{value:"Execution Type:",id:"execution-type",level:4},{value:"Script:",id:"script",level:4},{value:"Arguments:",id:"arguments",level:4}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/Difficulty-easy-green?style=flat",alt:"Difficulty"}),"\n",(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/Setup%20Time-5%20minutes-green?style=flat",alt:"Setup Time"}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/josh5",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/Original%20Author-josh5-lightgrey?style=flat?style=plastic&logo=github",alt:"Original Author"})})]}),"\n",(0,s.jsx)(n.p,{children:"Stripping subtitle streams is really simple. This guide will add a simple script that will strip subtitle streams from your file.\nOptionally, you will have the ability to specify a number of streams that you wish to keep."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Currently, this setup does not container a library scan file test runner.\nTherefore, it will not process files without another plugin in the library's\nplugin flow to test that the scanned files need to be processed."})}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["Compliment this configuration with the plugin ",(0,s.jsx)(n.strong,{children:"Re-order subtitle streams by language"}),"."]}),(0,s.jsx)(n.p,{children:"You can re-order your subtitle streams to have a particular language first,\nthen use this process to strip out all the ones remaining."})]}),"\n",(0,s.jsx)(n.h2,{id:"instructions",children:"Instructions:"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"Once installed, you can configure the script by editing the top section:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"###################################################################\n# CONFIG:\n# NUMBER_OF_SUB_STREAMS_TO_KEEP\n#   Specify the number of subtitle streams to keep.\n#   Script will preserve the number of subtitle streams specified \n#     in this value. All others will be stripped out.\n#   Set this value to 0 to remove all subtitle streams.\nNUMBER_OF_SUB_STREAMS_TO_KEEP=1\n###################################################################\n"})})]}),"\n",(0,s.jsxs)(a.A,{defaultValue:"manual_config",values:[{label:"Manual Config",value:"manual_config"},{label:"Unmanic Library Import",value:"library_import"}],children:[(0,s.jsxs)(o.A,{value:"library_import",children:[(0,s.jsx)(n.p,{children:"Import this via the Unmanic library config importer."}),(0,s.jsx)("img",{className:"screenshot",style:{width:"400px"},src:t(2559).A}),(0,s.jsx)(n.p,{children:"Once imported, modify the library to suit your needs."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "plugins": {\n      "enabled_plugins": [\n      {\n          "plugin_id": "processor_script",\n          "has_config": true,\n          "settings": {\n          "input_type": "bash",\n          "script": "#!/usr/bin/env bash\\n###\\n# File: strip-subs.sh\\n# Project: tmp.BXJ7lwK6lZ\\n# File Created: Friday, 14th October 2022 5:35:18 am\\n# Author: Josh Sunnex (jsunnex@gmail.com)\\n# -----\\n# Last Modified: Friday, 14th October 2022 7:17:32 am\\n# Modified By: Josh Sunnex (jsunnex@gmail.com)\\n###\\n\\n###################################################################\\n# CONFIG:\\n# NUMBER_OF_SUB_STREAMS_TO_KEEP\\n#   Specify the number of subtitle streams to keep.\\n#   Script will preserve the number of subtitle streams specified \\n#     in this value. All others will be stripped out.\\n#   Set this value to 0 to remove all subtitle streams.\\nNUMBER_OF_SUB_STREAMS_TO_KEEP=3\\n###################################################################\\n\\n# Parse Args\\n__library_id=\\"\\"\\n__output_cache_file=\\"\\"\\n__original_source_file=\\"\\"\\n__original_source_size=\\"\\"\\n__source_file=\\"\\"\\n__source_size=\\"\\"\\n__return_data_file=\\"\\"\\n__positional_args=()\\nfor i in \\"${@}\\"; do\\n  case $i in\\n    --library-id=*)\\n      __library_id=\\"${i#*=}\\"\\n      shift # past argument=value\\n      ;;\\n    --output-cache-file=*)\\n      __output_cache_file=\\"${i#*=}\\"\\n      shift # past argument=value\\n      ;;\\n    --original-source-file=*)\\n      __original_source_file=\\"${i#*=}\\"\\n      shift # past argument=value\\n      ;;\\n    --original-source-size=*)\\n      __original_source_size=\\"${i#*=}\\"\\n      shift # past argument=value\\n      ;;\\n    -s=*|--source-file=*)\\n      __source_file=\\"${i#*=}\\"\\n      shift # past argument=value\\n      ;;\\n    --source-size=*)\\n      __source_size=\\"${i#*=}\\"\\n      shift # past argument=value\\n      ;;\\n    --return-data-file=*)\\n      __return_data_file=\\"${i#*=}\\"\\n      shift # past argument=value\\n      ;;\\n    -*|--*)\\n      echo \\"Unknown option $i\\"\\n      exit 1\\n      ;;\\n    *)\\n      __positional_args+=(\\"$1\\") # save positional arg\\n      shift # past argument\\n      ;;\\n  esac\\ndone\\nset -- \\"${__positional_args[@]}\\" # restore positional parameters\\n\\n# Helper functions\\n__jq_item() {\\n    echo \\"${1}\\" | base64 --decode | jq -r \\"${2}\\"\\n}\\n\\n# Generate ffmpeg command\\necho\\necho \\"Probing file \'${__source_file}\'...\\"\\nprobe=$(ffprobe -show_format -show_streams -print_format json -loglevel quiet \\"${__source_file}\\")\\nif [[ $? -gt 0 ]]; then\\n    # Probably not a video file\\n    echo \\"Unable to probe file. This is probably not a valid video file so will ignore. EXIT!\\"\\n    exit 0\\nfi\\n# Ensure no further pipes fail\\nset -eo pipefail\\n\\necho\\necho \\"Building ffmpeg args...\\"\\necho\\nargs=\\"-hide_banner -loglevel info -i \'${__source_file}\' -strict -2 -max_muxing_queue_size 10240 -map 0 -c:v copy -c:a copy\\"\\nsubtitle_streams_count=0\\nfound_things_to_do=\\"false\\"\\nfor stream in $(echo \\"${probe}\\" | jq -r \'.streams[] | @base64\'); do\\n    index=$(__jq_item \\"${stream}\\" \'.index\')\\n    codec_type=$(__jq_item \\"${stream}\\" \'.codec_type\')\\n    codec_name=$(__jq_item \\"${stream}\\" \'.codec_name\')\\n    echo \\"  Stream #${index}: {type:${codec_type}, codec:${codec_name}}\\"\\n    if [[ \\"${codec_type}\\" == \\"subtitle\\" ]]; then\\n        sub_language=$(__jq_item \\"${stream}\\" \'.tags.language\')\\n        sub_title=$(__jq_item \\"${stream}\\" \'.tags.title\')\\n        echo \\"    - Subtitile Info: {language:${sub_language}, title:${sub_title}}\\"\\n        if [[ \\"${subtitle_streams_count}\\" -ge \\"${NUMBER_OF_SUB_STREAMS_TO_KEEP}\\" ]]; then\\n            echo \\"      - MARKING FOR REMOVAL\\"\\n            args=\\"${args} -map -0:s:${subtitle_streams_count}\\"\\n            found_things_to_do=\\"true\\"\\n        else\\n            args=\\"${args} -c:s:${subtitle_streams_count} copy\\"\\n            echo \\"      - MARKING FOR COPY\\"\\n        fi\\n        ((subtitle_streams_count+=1))\\n    elif [[ \\"${codec_type}\\" == \\"video\\" ]]; then\\n        vid_width=$(__jq_item \\"${stream}\\" \'.width\')\\n        vid_height=$(__jq_item \\"${stream}\\" \'.height\')\\n        echo \\"    - Video Info: {width:${vid_width}, height:${vid_height}}\\"\\n        echo \\"      - MARKING FOR COPY\\"\\n    elif [[ \\"${codec_type}\\" == \\"audio\\" ]]; then\\n        audio_channels=$(__jq_item \\"${stream}\\" \'.channels\')\\n        audio_bit_rate=$(__jq_item \\"${stream}\\" \'.bit_rate\')\\n        echo \\"    - Audio Info: {channels:${audio_channels}, bit_rate:${audio_bit_rate}}\\"\\n        echo \\"      - MARKING FOR COPY\\"\\n    else\\n        echo \\"    - Stream Info: null\\"\\n    fi\\ndone\\n# Only provide a command to execute if streams were found to need modifying\\nif [[ \\"${found_things_to_do}\\" ]]; then\\n    exec_command=\\"ffmpeg ${args} -y \'${__output_cache_file}\'\\"\\nelse\\n    exec_command=\\"\\"\\nfi\\necho\\necho \\"Command: ${exec_command}\\"\\n\\n# Generate return object for Unmanic to execute the command\\n# This script could also execute the command from here if you wish, but Unmanic will process the log differently\\nreturn_object=$(jq --null-input \\\\\\n  --arg exec_command \\"${exec_command}\\" \\\\\\n  --arg file_out \\"${__output_cache_file}\\" \\\\\\n  \'{\\"exec_command\\": $exec_command, \\"file_out\\": $file_out}\')\\nif [[ ! -z ${__return_data_file} ]]; then\\n    echo \\"${return_object}\\" > \\"${__return_data_file}\\"\\n    cat \\"${__return_data_file}\\"\\nfi\\n",\n          "cmd": "",\n          "args": "--source-file=\\"{source_file_path}\\" \\n--output-cache-file=\\"{file_out_path}\\" \\n--return-data-file=\\"{data_json_file}\\"\\n",\n          "script_dependencies": ""\n          }\n      }\n      ],\n      "plugin_flow": {\n      "library_management.file_test": [],\n      "worker.process_item": ["processor_script"],\n      "postprocessor.file_move": [],\n      "postprocessor.task_result": []\n      }\n  },\n  "library_config": {\n      "name": "| Example | Subtitle Stripping"\n  }\n}\n\n'})})]}),(0,s.jsxs)(o.A,{value:"manual_config",children:[(0,s.jsxs)(n.p,{children:["Ensure you have installed the ",(0,s.jsx)("b",{children:"External Worker Processor Script"})," plugin."]}),(0,s.jsx)("img",{className:"screenshot",style:{width:"400px"},src:t(4773).A}),(0,s.jsx)(n.p,{children:"Configure the plugin with the following:"}),(0,s.jsx)(n.h4,{id:"execution-type",children:"Execution Type:"}),(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Bash Script"}),"\n"]}),(0,s.jsx)(n.h4,{id:"script",children:"Script:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'#!/usr/bin/env bash\n###\n# File: strip-subs.sh\n# Project: tmp.BXJ7lwK6lZ\n# File Created: Friday, 14th October 2022 5:35:18 am\n# Author: Josh Sunnex (jsunnex@gmail.com)\n# -----\n# Last Modified: Friday, 14th October 2022 7:17:32 am\n# Modified By: Josh Sunnex (jsunnex@gmail.com)\n###\n\n###################################################################\n# CONFIG:\n# NUMBER_OF_SUB_STREAMS_TO_KEEP\n#   Specify the number of subtitle streams to keep.\n#   Script will preserve the number of subtitle streams specified \n#     in this value. All others will be stripped out.\n#   Set this value to 0 to remove all subtitle streams.\nNUMBER_OF_SUB_STREAMS_TO_KEEP=1\n###################################################################\n\n# Parse Args\n__library_id=""\n__output_cache_file=""\n__original_source_file=""\n__original_source_size=""\n__source_file=""\n__source_size=""\n__return_data_file=""\n__positional_args=()\nfor i in "${@}"; do\ncase $i in\n  --library-id=*)\n    __library_id="${i#*=}"\n    shift # past argument=value\n    ;;\n  --output-cache-file=*)\n    __output_cache_file="${i#*=}"\n    shift # past argument=value\n    ;;\n  --original-source-file=*)\n    __original_source_file="${i#*=}"\n    shift # past argument=value\n    ;;\n  --original-source-size=*)\n    __original_source_size="${i#*=}"\n    shift # past argument=value\n    ;;\n  -s=*|--source-file=*)\n    __source_file="${i#*=}"\n    shift # past argument=value\n    ;;\n  --source-size=*)\n    __source_size="${i#*=}"\n    shift # past argument=value\n    ;;\n  --return-data-file=*)\n    __return_data_file="${i#*=}"\n    shift # past argument=value\n    ;;\n  -*|--*)\n    echo "Unknown option $i"\n    exit 1\n    ;;\n  *)\n    __positional_args+=("$1") # save positional arg\n    shift # past argument\n    ;;\nesac\ndone\nset -- "${__positional_args[@]}" # restore positional parameters\n\n# Helper functions\n__jq_item() {\n  echo "${1}" | base64 --decode | jq -r "${2}"\n}\n\n# Generate ffmpeg command\necho\necho "Probing file \'${__source_file}\'..."\nprobe=$(ffprobe -show_format -show_streams -print_format json -loglevel quiet "${__source_file}")\nif [[ $? -gt 0 ]]; then\n  # Probably not a video file\n  echo "Unable to probe file. This is probably not a valid video file so will ignore. EXIT!"\n  exit 0\nfi\n# Ensure no further pipes fail\nset -eo pipefail\n\necho\necho "Building ffmpeg args..."\necho\nargs="-hide_banner -loglevel info -i \'${__source_file}\' -strict -2 -max_muxing_queue_size 10240 -map 0 -c:v copy -c:a copy"\nsubtitle_streams_count=0\nfound_things_to_do="false"\nfor stream in $(echo "${probe}" | jq -r \'.streams[] | @base64\'); do\n  index=$(__jq_item "${stream}" \'.index\')\n  codec_type=$(__jq_item "${stream}" \'.codec_type\')\n  codec_name=$(__jq_item "${stream}" \'.codec_name\')\n  echo "  Stream #${index}: {type:${codec_type}, codec:${codec_name}}"\n  if [[ "${codec_type}" == "subtitle" ]]; then\n      sub_language=$(__jq_item "${stream}" \'.tags.language\')\n      sub_title=$(__jq_item "${stream}" \'.tags.title\')\n      echo "    - Subtitile Info: {language:${sub_language}, title:${sub_title}}"\n      if [[ "${subtitle_streams_count}" -ge "${NUMBER_OF_SUB_STREAMS_TO_KEEP}" ]]; then\n          echo "      - MARKING FOR REMOVAL"\n          args="${args} -map -0:s:${subtitle_streams_count}"\n          found_things_to_do="true"\n      else\n          args="${args} -c:s:${subtitle_streams_count} copy"\n          echo "      - MARKING FOR COPY"\n      fi\n      ((subtitle_streams_count+=1))\n  elif [[ "${codec_type}" == "video" ]]; then\n      vid_width=$(__jq_item "${stream}" \'.width\')\n      vid_height=$(__jq_item "${stream}" \'.height\')\n      echo "    - Video Info: {width:${vid_width}, height:${vid_height}}"\n      echo "      - MARKING FOR COPY"\n  elif [[ "${codec_type}" == "audio" ]]; then\n      audio_channels=$(__jq_item "${stream}" \'.channels\')\n      audio_bit_rate=$(__jq_item "${stream}" \'.bit_rate\')\n      echo "    - Audio Info: {channels:${audio_channels}, bit_rate:${audio_bit_rate}}"\n      echo "      - MARKING FOR COPY"\n  else\n      echo "    - Stream Info: null"\n  fi\ndone\n# Only provide a command to execute if streams were found to need modifying\nif [[ "${found_things_to_do}" ]]; then\n  exec_command="ffmpeg ${args} -y \'${__output_cache_file}\'"\nelse\n  exec_command=""\nfi\necho\necho "Command: ${exec_command}"\n\n# Generate return object for Unmanic to execute the command\n# This script could also execute the command from here if you wish, but Unmanic will process the log differently\nreturn_object=$(jq --null-input \\\n--arg exec_command "${exec_command}" \\\n--arg file_out "${__output_cache_file}" \\\n\'{"exec_command": $exec_command, "file_out": $file_out}\')\nif [[ ! -z ${__return_data_file} ]]; then\n  echo "${return_object}" > "${__return_data_file}"\n  cat "${__return_data_file}"\nfi\n\n'})}),(0,s.jsx)(n.h4,{id:"arguments",children:"Arguments:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'--source-file="{source_file_path}" \n--output-cache-file="{file_out_path}" \n--return-data-file="{data_json_file}"\n'})})]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4773:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/external_worker_processor_script-c212e5b688f43e07d954752e5e70fe42.png"},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var i=t(4164);const s={tabItem:"tabItem_Ymn6"};var r=t(4848);function a({children:e,hidden:n,className:t}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,t),hidden:n,children:e})}}}]);