"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[2163],{6100:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"development/writing_plugins/creating_a_new_plugin","title":"Creating a New Plugin","description":"The best option for creating a new Plugin for Unmanic is through the","source":"@site/docs/development/writing_plugins/creating_a_new_plugin.mdx","sourceDirName":"development/writing_plugins","slug":"/development/writing_plugins/creating_a_new_plugin","permalink":"/docs/development/writing_plugins/creating_a_new_plugin","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Creating a New Plugin","id":"creating_a_new_plugin"},"sidebar":"docs","previous":{"title":"Introduction to Writing Plugins","permalink":"/docs/development/writing_plugins/introduction"},"next":{"title":"Accessing Plugin Settings","permalink":"/docs/development/writing_plugins/plugin_settings"}}');var r=i(4848),o=i(8453);const s={title:"Creating a New Plugin",id:"creating_a_new_plugin"},a=void 0,l={},c=[{value:"Generating a new Plugin",id:"generating-a-new-plugin",level:2}];function u(n){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:["The best option for creating a new Plugin for Unmanic is through the\n",(0,r.jsx)(e.a,{href:"/docs/development/plugin_manager_cli",children:(0,r.jsx)(e.strong,{children:"Plugin Manager CLI"})}),"."]}),"\n",(0,r.jsx)(e.p,{children:"Once you have the Plugin Manager CLI installed, carry on."}),"\n",(0,r.jsx)(e.h2,{id:"generating-a-new-plugin",children:"Generating a new Plugin"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"unmanic --manage_plugins\n"})}),"\n",(0,r.jsx)(e.p,{children:"From here you will see a terminal output listing a number of options."}),"\n",(0,r.jsxs)(e.p,{children:["Select the option ",(0,r.jsx)(e.strong,{children:'"Create new plugin"'})," and follow the prompts."]}),"\n",(0,r.jsxs)(e.p,{children:["Once this is complete, a new Plugin directory structure will be created\nin your ",(0,r.jsx)(e.code,{children:"~/.unmanic/plugins/"})," directory. Open this in your IDE of choice\nand begin editing the files as necessary."]}),"\n",(0,r.jsxs)(e.p,{children:["Be sure to test your Plugin with the ",(0,r.jsx)(e.a,{href:"/docs/development/plugin_manager_cli",children:(0,r.jsx)(e.strong,{children:"Plugin Manager CLI"})})," as required."]}),"\n",(0,r.jsx)(e.admonition,{type:"tip",children:(0,r.jsxs)(e.p,{children:["You can run the Plugin test functionality within the Plugin Manager CLI to\n",(0,r.jsx)(e.code,{children:"print(data)"})," or to test the functionality of your Plugin without needing\nto run the main Unmanic process."]})})]})}function g(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>a});var t=i(6540);const r={},o=t.createContext(r);function s(n){const e=t.useContext(o);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);