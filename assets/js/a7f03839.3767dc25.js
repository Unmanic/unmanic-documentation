"use strict";(self.webpackChunkunmanic_documentation=self.webpackChunkunmanic_documentation||[]).push([[7132],{1470:(e,n,i)=>{i.d(n,{A:()=>_});var t=i(6540),r=i(4164),o=i(3104),a=i(6347),s=i(205),l=i(7485),c=i(1682),u=i(679);function d(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:i}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return d(e).map(({props:{value:e,label:n,attributes:i,default:t}})=>({value:e,label:n,attributes:i,default:t}))}(i);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,i])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const i=(0,a.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(r),(0,t.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})},[r,i])]}function f(e){const{defaultValue:n,queryString:i=!1,groupId:r}=e,o=h(e),[a,l]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=n.find(e=>e.default)??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:o})),[c,d]=m({queryString:i,groupId:r}),[f,I]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[i,r]=(0,u.Dv)(n);return[i,(0,t.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),g=(()=>{const e=c??f;return p({value:e,tabValues:o})?e:null})();(0,s.A)(()=>{g&&l(g)},[g]);return{selectedValue:a,selectValue:(0,t.useCallback)(e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),I(e)},[d,I,o]),tabValues:o}}var I=i(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=i(4848);function b({className:e,block:n,selectedValue:i,selectValue:t,tabValues:a}){const s=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),c=e=>{const n=e.currentTarget,r=s.indexOf(n),o=a[r].value;o!==i&&(l(n),t(o))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const i=s.indexOf(e.currentTarget)+1;n=s[i]??s[0];break}case"ArrowLeft":{const i=s.indexOf(e.currentTarget)-1;n=s[i]??s[s.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:t})=>(0,v.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:e=>{s.push(e)},onKeyDown:u,onClick:c,...t,className:(0,r.A)("tabs__item",g.tabItem,t?.className,{"tabs__item--active":i===e}),children:n??e},e))})}function x({lazy:e,children:n,selectedValue:i}){const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=o.find(e=>e.props.value===i);return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i}))})}function D(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,v.jsx)(b,{...n,...e}),(0,v.jsx)(x,{...n,...e})]})}function _(e){const n=(0,I.A)();return(0,v.jsx)(D,{...e,children:d(e.children)},String(n))}},2321:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"guides/nvidia_support_unmanic_on_linux","title":"NVIDIA Hardware Acceleration on Linux","description":"NVIDIA Hardware Acceleration on Linux","source":"@site/docs/guides/nvidia_support_unmanic_on_linux.md","sourceDirName":"guides","slug":"/guides/nvidia_support_unmanic_on_linux","permalink":"/docs/guides/nvidia_support_unmanic_on_linux","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"NVIDIA Hardware Acceleration on Linux","description":"NVIDIA Hardware Acceleration on Linux","id":"nvidia_support_unmanic_on_linux"},"sidebar":"docs","previous":{"title":"Linking Unmanic Installations","permalink":"/docs/guides/unmanic_link_installations"},"next":{"title":"Running a FileBot Post-processor","permalink":"/docs/guides/filebot_post_processor"}}');var r=i(4848),o=i(8453),a=i(1470),s=i(9365);const l={title:"NVIDIA Hardware Acceleration on Linux",description:"NVIDIA Hardware Acceleration on Linux",id:"nvidia_support_unmanic_on_linux"},c=void 0,u={},d=[{value:"Instructions:",id:"instructions",level:2},{value:"1) Check GPU Support",id:"1-check-gpu-support",level:3},{value:"2) Install GPU Driver",id:"2-install-gpu-driver",level:3},{value:"3) FFmpeg installation with NVENC support",id:"3-ffmpeg-installation-with-nvenc-support",level:3},{value:"4) Running in Docker with NVENC support",id:"4-running-in-docker-with-nvenc-support",level:3},{value:"Installing the NVIDIA Container Toolkit",id:"installing-the-nvidia-container-toolkit",level:4},{value:"Creating the Docker container",id:"creating-the-docker-container",level:4}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{src:"https://img.shields.io/badge/Difficulty-easy-green?style=flat",alt:"Difficulty"}),"\n",(0,r.jsx)(n.img,{src:"https://img.shields.io/badge/Setup%20Time-5%20minutes-green?style=flat",alt:"Setup Time"})]}),"\n",(0,r.jsx)(n.p,{children:"A number of plugins for Unmanic support hardware acceleration that utilise an NVIDIA GPU. This includes hardware acceleration (HWA) of video decoding/encoding in tools like FFmpeg or HandBrake CLI using the NVIDIA NVDEC/NVENC decoder/encoder."}),"\n",(0,r.jsx)(n.p,{children:"Follow these instructions to configure the Unmanic Docker container for running FileBot as a Post-processor function."}),"\n",(0,r.jsx)(n.h2,{id:"instructions",children:"Instructions:"}),"\n",(0,r.jsx)(n.h3,{id:"1-check-gpu-support",children:"1) Check GPU Support"}),"\n",(0,r.jsxs)(n.p,{children:["You can find an official list of NVIDIA Graphics Cards and their supported codecs ",(0,r.jsx)(n.a,{href:"https://developer.nvidia.com/video-encode-and-decode-gpu-support-matrix-new",children:"Here"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Check that your GPU is listed and is capable of doing what you want it to."}),"\n",(0,r.jsx)(n.h3,{id:"2-install-gpu-driver",children:"2) Install GPU Driver"}),"\n",(0,r.jsx)(n.p,{children:"Ensure you have installed the NVIDIA drivers."}),"\n",(0,r.jsx)(n.p,{children:"This is required even if you intend to run Unmanic within a Docker container."}),"\n",(0,r.jsxs)(n.p,{children:["You can download the latest NVIDIA GPU driver from ",(0,r.jsx)(n.a,{href:"https://www.nvidia.com/Download/driverResults.aspx/187162/en-us",children:"here"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"The minimum required NVIDIA driver version is 418.30 for this to work in Linux."})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["It is recommended to also patch drivers the drivers by following the instructions ",(0,r.jsx)(n.a,{href:"https://github.com/keylase/nvidia-patch",children:"here"}),". This project will remove the restriction on maximum number of simultaneous NVENC video encoding sessions imposed by Nvidia to consumer-grade GPUs."]})}),"\n",(0,r.jsx)(n.h3,{id:"3-ffmpeg-installation-with-nvenc-support",children:"3) FFmpeg installation with NVENC support"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Only worry about this if you are running Unmanic natively on Linux.\nThe Docker image has FFmpeg pre-installed with support for NVENC/NVDEC"})}),"\n",(0,r.jsx)(n.p,{children:"Install FFmpeg for your operating system."}),"\n",(0,r.jsxs)(n.p,{children:["It is recommend to use the ",(0,r.jsx)(n.a,{href:"https://jellyfin.org/docs/general/administration/installing.html#ffmpeg-installation",children:"Jellyfin FFmpeg builds"}),", however any recent release of FFmpeg will work fine."]}),"\n",(0,r.jsx)(n.p,{children:"To ensure your FFmpeg installation is capable of running the NVENC encoders, run this command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'for i in encoders decoders filters; do echo $i:; ffmpeg -hide_banner -${i} | egrep -i "npp|cuvid|nvenc|cuda|nvdec"; done\n'})}),"\n",(0,r.jsx)(n.p,{children:"You should see a list of available encoders and decoders."}),"\n",(0,r.jsx)(n.h3,{id:"4-running-in-docker-with-nvenc-support",children:"4) Running in Docker with NVENC support"}),"\n",(0,r.jsx)(n.h4,{id:"installing-the-nvidia-container-toolkit",children:"Installing the NVIDIA Container Toolkit"}),"\n",(0,r.jsxs)(n.p,{children:["If you intend to use Unmanic inside a Docker container, you will also need to pass through the required devices to the container.\nWith NVIDIA this is done by installing the ",(0,r.jsx)(n.a,{href:"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker",children:"nvidia-docker2"})," package\non your host."]}),"\n",(0,r.jsx)(n.p,{children:"Once you have followed these steps, you can test that the Unmanic Docker container can use the NVENC hardware by running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'docker run --rm --gpus all --entrypoint="" josh5/unmanic nvidia-smi\n'})}),"\n",(0,r.jsx)(n.p,{children:"You should see the following output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Sun Apr 17 05:31:44 2022       \n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 510.54       Driver Version: 510.54       CUDA Version: 11.6     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|===============================+======================+======================|\n|   0  NVIDIA GeForce ...  Off  | 00000000:01:00.0  On |                  N/A |\n|  0%   34C    P8    N/A / 120W |    185MiB /  4096MiB |      0%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n                                                                               \n+-----------------------------------------------------------------------------+\n| Processes:                                                                  |\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n|        ID   ID                                                   Usage      |\n|=============================================================================|\n|  No running processes found                                                 |\n+-----------------------------------------------------------------------------+\n"})}),"\n",(0,r.jsx)(n.h4,{id:"creating-the-docker-container",children:"Creating the Docker container"}),"\n",(0,r.jsxs)(a.A,{defaultValue:"docker_run",values:[{label:"Docker run",value:"docker_run"},{label:"Docker-compose",value:"docker_compose"}],children:[(0,r.jsx)(s.A,{value:"docker_run",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"  PUID=$(id -u)\n  PGID=$(id -g)\n\n  # CONFIG_DIR - Where you settings are saved\n  CONFIG_DIR=/config\n\n  # LIBRARY_DIR - The location/locations of your library\n  LIBRARY_DIR=/library\n\n  # CACHE_DIR - A tmpfs or and folder for temporary conversion files\n  CACHE_DIR=/tmp/unmanic\n  \n  # NVIDIA_VISIBLE_DEVICES - The GPUs that will be accessible to the container\n  NVIDIA_VISIBLE_DEVICES=all\n\n  docker run -ti --rm \\\n      -e PUID=${PUID} \\\n      -e PGID=${PGID} \\\n      -e NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES} \\\n      --runtime=nvidia \\\n      -p 8888:8888 \\\n      -v ${CONFIG_DIR}:/config \\\n      -v ${LIBRARY_DIR}:/library \\\n      -v ${CACHE_DIR}:/tmp/unmanic \\\n      josh5/unmanic:latest\n"})})}),(0,r.jsx)(s.A,{value:"docker_compose",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"  # Variables that will need to be changed:\n  #     <PUID>                            -  User id for folder/file permissions\n  #     <PGID>                            -  Group id for folder/file permissions\n  #     <NVIDIA_VISIBLE_DEVICES>          -  The GPUs that will be accessible to the container\n  #                                          Options: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/user-guide.html#gpu-enumeration\n  #     <PATH_TO_CONFIG>                  -  Path where Unmanic will store config files\n  #     <PATH_TO_LIBRARY>                 -  Path where you store the files that Unmanic will scan\n  #     <PATH_TO_ENCODE_CACHE>            -  Cache path for in-progress encoding tasks\n  #\n\n  ---\n  version: '2.4'\n  services:\n    unmanic:\n      container_name: unmanic\n      image: josh5/unmanic:latest\n      ports:\n        - 8888:8888\n      environment:\n        - PUID=<PUID>\n        - PGID=<PGID>\n        - NVIDIA_VISIBLE_DEVICES=<NVIDIA_VISIBLE_DEVICES>\n      volumes:\n        - <PATH_TO_CONFIG>:/config\n        - <PATH_TO_LIBRARY>:/library\n        - <PATH_TO_ENCODE_CACHE>:/tmp/unmanic\n      runtime: nvidia       # For H/W transcoding using the NVENC encoder\n"})})})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var t=i(6540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}},9365:(e,n,i)=>{i.d(n,{A:()=>a});i(6540);var t=i(4164);const r={tabItem:"tabItem_Ymn6"};var o=i(4848);function a({children:e,hidden:n,className:i}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,i),hidden:n,children:e})}}}]);